"""
함수 d(75) = 75 + 7 + 5 = 75 + 12 + 87
87의 생성자(이전항) = 75
생성자(이전항)가 없는 숫자 = 셀프 넘버
셀프넘버 = 자연수 - 셀프넘버가 아닌 수
셀프넘버가 아닌 수 
    = 생성자가 있는 수
    = N까지 함수d 돌려서 나온 값들
셀프넘버가 아닌 수 리스트를 만들고 
N까지와, 셀프넘버아닌수 리스트를 이중순회 하면서
리스트안에 없으면 출력
"""

N = 10000 # 순회 범위

def Kaprekar(n): # n본인과 각 자리수들을 더하는 함수
    # Kaprekar를 통해 만들어진 값은 생성자가 존재하는 "셀프넘버가 아닌 숫자"
    # 10의 자리 : n + n%10 + (n//10)%10
    # 100의 자리 : n + n%10 + (n//10)%10 + (n//100)%10
    def Kapre(n): # 각 자릿수를 더하는 재귀함수
        result = 0 # 결과값 초기화
        if n < 10: # 한 자리수 일때
            result += n # 결과값에 저장
        else: # 두 자리 이상일 때
            return n%10 + Kapre(n//10) # 1의 자리수 값과 재귀호출 반환
        return result # 각 자리수를 더한 값을 반환
    return n + Kapre(n) # 처음 input값 n과, 각자리 숫자들을 더한 값을 반환

not_self_numbers = [] # 셀프넘버가 아닌 수 리스트 초기화
for i in range(N + 1): # 10000보다 작거나 "같은" 셀프넘버가 아닌 수
    not_self_numbers.append(Kaprekar(i)) # 함수를 통과한 값은 셀프넘버가 아니므로 리스트에 추가

for i in range(1, N + 1): # 1부터 N까지 순회하면서 
    if i in not_self_numbers: # 순회중인 i가 셀프넘버가 아닌 값이면
        continue # 지나가고
    else: # 셀프넘버이면
        print(i) # 출력